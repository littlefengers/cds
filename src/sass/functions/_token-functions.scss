//TODO there might be away to do this more efficiently by iterating through the map to get the deepiest item
//This will go through a nested map and grab the deepiest property
//STILL NEEDS TESTING
@function get-deepest-token($token:$cds-tokens, $component, $attribute-type, $attribute, $component-variant:"", $component-state:""){
    @if type-of($token) != 'map' {
      @error 'The argument $map: `#{$map}` is of incorrect type: `#{type-of($map)}`. Type of `Map` is required!';
    }
  
    @if deep-map-check($token, $component, $attribute-type, $component-variant, $component-state, $attribute){
      @return map-get-deep($token, $component, $attribute-type, $component-variant, $component-state, $attribute);
    }
  
    @if deep-map-check($token, $component, $attribute-type, $component-variant, $attribute){
      @return map-get-deep($token, $component, $attribute-type, $component-variant, $attribute);
    }
  
    @if deep-map-check($token, $component, $attribute-type, $attribute){
      @return map-get-deep($token, $component, $attribute-type, $attribute);
    }
  };

//Function for grabbing color
@function get-color($color)
{
  @return map-get-deep($cds-tokens,"color",#{$color}); 
};

//Typography

@function get-font-size($font-size)
{
  @return map-get-deep($cds-tokens,"font","size", #{$fontSize});
};

@function get-font-line-height($line-height)
{
  @return map-get-deep($cds-tokens,"font","line-height", #{$line-height});
};

@function get-font-weight($weight)
{
  @return map-get-deep($cds-tokens,"font","weight", #{$weight});
};

@function get-space($space-size){
  @return map-get-deep($cds-tokens,"space", #{$space-size}); 
};

@function get-space-inset($space-size){
  @return map-get-deep($cds-tokens,"space", "inset", #{$space-size}); 
};

//Radius

@function get-radius($radius){
  @return map-get-deep($cds-tokens,"radius", #{$radius}); 
}

//Border Width

@function get-border-width($border-width){
  @return map-get-deep($cds-tokens,"size", "border-width", #{$border-width}); 
}